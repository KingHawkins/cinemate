{"ast":null,"code":"var _jsxFileName = \"/home/hawkins/cinemate/client/src/components/Movie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Movie(_ref) {\n  _s();\n  let {\n    id\n  } = _ref;\n  const [movie, setMovie] = useState([]);\n  const fetchMovie = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/movies/${id}`);\n      const data = await response.json();\n      setMovie(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchMovie(id);\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        id: movie.id,\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"150\",\n          height: \"200\",\n          src: movie.trailer_url,\n          frameBorder: \"0\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster_url,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: movie.trailer_url,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_s(Movie, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n_c = Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Movie","_ref","_s","id","movie","setMovie","fetchMovie","response","fetch","data","json","err","console","error","children","className","width","height","src","trailer_url","frameBorder","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","poster_url","alt","title","to","overview","_c","$RefreshReg$"],"sources":["/home/hawkins/cinemate/client/src/components/Movie.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default function Movie({ id }){\n    const [movie, setMovie] = useState([])\n    const fetchMovie = async () => {\n\ttry{\n\t    const response = await fetch(`http://127.0.0.1:5000/api/movies/${id}`)\n\t    const data = await response.json()\n\t    setMovie(data)\n\t} catch(err){\n\t    console.error(err)\n\t}\n    }\n    useEffect(() => {\n       fetchMovie(id)\n    }, [id])\n    return (\n\t<>\n\t    <div className=\"movie-info\">\n\t    {/*{movies.map((movie) => (*/}\n              <div className=\"movie\" id={movie.id}>\n                <iframe width=\"150\" height=\"200\" src={movie.trailer_url} frameBorder=\"0\" allowFullScreen></iframe>\n                <img src={movie.poster_url} alt={movie.title} />\n                <Link to={movie.trailer_url}>{movie.title}</Link>\n\t\t<p>{movie.overview}</p>\n              </div>\n\t    {/* ))}*/}\n\t    </div>\n\t</>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAQC,IAAI,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAQ;EAAAC,EAAA;EAAA,IAAP;IAAEC;EAAG,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCL,EAAG,EAAC,CAAC;MACtE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,QAAQ,CAACI,IAAI,CAAC;IAClB,CAAC,CAAC,OAAME,GAAG,EAAC;MACRC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACtB;EACG,CAAC;EACDjB,SAAS,CAAC,MAAM;IACbY,UAAU,CAACH,EAAE,CAAC;EACjB,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EACR,oBACHN,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACIjB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAD,QAAA,eAElBjB,OAAA;QAAKkB,SAAS,EAAC,OAAO;QAACZ,EAAE,EAAEC,KAAK,CAACD,EAAG;QAAAW,QAAA,gBAClCjB,OAAA;UAAQmB,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC,KAAK;UAACC,GAAG,EAAEd,KAAK,CAACe,WAAY;UAACC,WAAW,EAAC,GAAG;UAACC,eAAe;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAClG5B,OAAA;UAAKqB,GAAG,EAAEd,KAAK,CAACsB,UAAW;UAACC,GAAG,EAAEvB,KAAK,CAACwB;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChD5B,OAAA,CAACF,IAAI;UAACkC,EAAE,EAAEzB,KAAK,CAACe,WAAY;UAAAL,QAAA,EAAEV,KAAK,CAACwB;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/D5B,OAAA;UAAAiB,QAAA,EAAIV,KAAK,CAAC0B;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV;EAAC,gBACR,CAAC;AAEJ;AAACvB,EAAA,CA5BuBF,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}