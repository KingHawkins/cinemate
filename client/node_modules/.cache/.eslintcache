[{"/home/hawkins/cinemate/client/src/index.js":"1","/home/hawkins/cinemate/client/src/App.js":"2","/home/hawkins/cinemate/client/src/reportWebVitals.js":"3","/home/hawkins/cinemate/client/src/components/Login.jsx":"4","/home/hawkins/cinemate/client/src/components/Register.jsx":"5","/home/hawkins/cinemate/client/src/components/Movie.jsx":"6","/home/hawkins/cinemate/client/src/components/SeatMap.jsx":"7","/home/hawkins/cinemate/client/src/components/Movies.jsx":"8","/home/hawkins/cinemate/client/src/components/Dashboard.jsx":"9","/home/hawkins/cinemate/client/src/components/About.jsx":"10","/home/hawkins/cinemate/client/src/components/Landing.jsx":"11","/home/hawkins/cinemate/client/src/components/Ticket.jsx":"12","/home/hawkins/cinemate/client/src/components/PayPalButton.jsx":"13","/home/hawkins/cinemate/client/src/components/ticketCreation.js":"14","/home/hawkins/cinemate/client/src/components/Footer.jsx":"15"},{"size":535,"mtime":1686583872000,"results":"16","hashOfConfig":"17"},{"size":1118,"mtime":1686583871000,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1686583872000,"results":"19","hashOfConfig":"17"},{"size":2160,"mtime":1686641883314,"results":"20","hashOfConfig":"17"},{"size":2280,"mtime":1686591999912,"results":"21","hashOfConfig":"17"},{"size":2422,"mtime":1686583872000,"results":"22","hashOfConfig":"17"},{"size":6620,"mtime":1686583872000,"results":"23","hashOfConfig":"17"},{"size":1025,"mtime":1686583872000,"results":"24","hashOfConfig":"17"},{"size":3648,"mtime":1686583871000,"results":"25","hashOfConfig":"17"},{"size":1333,"mtime":1686583871000,"results":"26","hashOfConfig":"17"},{"size":2758,"mtime":1686583872000,"results":"27","hashOfConfig":"17"},{"size":2733,"mtime":1686583872000,"results":"28","hashOfConfig":"17"},{"size":2567,"mtime":1686583872000,"results":"29","hashOfConfig":"17"},{"size":1540,"mtime":1686583872000,"results":"30","hashOfConfig":"17"},{"size":889,"mtime":1686583872000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vu05c1",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hawkins/cinemate/client/src/index.js",[],[],"/home/hawkins/cinemate/client/src/App.js",[],[],"/home/hawkins/cinemate/client/src/reportWebVitals.js",[],[],"/home/hawkins/cinemate/client/src/components/Login.jsx",["82","83","84","85","86"],[],"import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate } from  'react-router-dom'\nimport '../static/account.css'\nimport  github from '../github.png'\nimport apple from '../apple.png'\nimport  social from '../social.png'\nimport logo from '../logo.png'\nimport user from '../user-solid.svg'\nimport lock from '../lock-solid.svg'\nimport phone from '../phone-solid.svg'\n\nexport default function Login()  {\n  const [data, setData] = useState({})\n  const navigate = useNavigate();\n  const getData = (e) => {\n     e.preventDefault()\n     const username = document.querySelector('#username').value\n     const password = document.querySelector('#password').value\n     setData({username, password})\n  }\n  const postData = (item) => {\n     fetch('http://127.0.0.1:5000/api/login', {\n\t     method: 'POST',\n\t     headers: {\n\t\t 'Content-Type': 'application/json'\n\t     },\n\t     body: JSON.stringify(item)\n\t  }).then(response => {\n\t\t if (response.status === 200) {\n\t\t\t navigate('/');\n\t\t\t return response.json();\n\t\t }\n\t  })\n\t  .then(jsondata => {\n\t\t  localStorage.setItem('access_token', jsondata.access_token)\n\t\t  console.log(jsondata)\n\t  })\n          .catch(err => console.error(err))\n  }\n  useEffect(() => {\n\t  postData(data)\n  }, [data])\n  return (\n    <div className=\"login\">\n\t <div id='alert' className='alert hidden'>Invalid credentials\n        <div id='progress-bar' className='progress-bar' />\n      </div>\n        <div className=\"cinema\">\n          <img src={ logo } alt=\"\"/>\n        </div>\n\t<form onSubmit={getData} id=\"login\">\n            <div>\n                <img src={ user } width=\"12px\" alt=\"\"/>\n                <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter your username\" required/>\n            </div>\n           <div>\n               <img src={ lock } width=\"12px\"alt=\"\"/>\n               <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter your password\" required/>\n           </div>\n           <button type=\"submit\">Login</button>\n        </form>\n        <div className=\"link\">\n          <p>Dont have an account? <Link to=\"/register\">Create an Account</Link></p>\n        </div>\n    </div>\n\n  )\n}\n","/home/hawkins/cinemate/client/src/components/Register.jsx",["87"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../static/index.css';\nimport user from '../user-solid.svg';\nimport apple from '../apple.png';\nimport lock from '../lock-solid.svg';\nimport phone from '../phone-solid.svg';\n\nexport default function Register () {\n  const [data, setData] = useState({});\n  const navigate = useNavigate();\n  const submitForm = (e) => {\n    e.preventDefault();\n    const username = document.querySelector('#username').value;\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    const contact = document.querySelector('#contact').value;\n    setData({ username, email, password, contact });\n  };\n  const postData = (item) => {\n    fetch('http://127.0.0.1:5000/api/register', {\n\t      method: 'POST',\n\t      headers: {\n      \t\t\t'Content-Type': 'application/json'\n    \t      },\n\t      body: JSON.stringify(item)\n\t   }).then(response => {\n      \t\tif (response.status === 200) {\n        \t   navigate('/login');\n\t\t }\n\t\t return response.json();\n\t   }).then(jsondata => console.log(jsondata));\n  };\n  useEffect(() => {\n    postData(data);\n  }, [data]);\n\n  return (\n\n    <div className='container'>\n      <div id='alert' className='alert hidden'>Username or email exists\n        <div id='progress-bar' className='progress-bar' />\n      </div>\n      <p>Create your Account</p>\n      <form onSubmit={submitForm} id='form'>\n        <div>\n          <img src={user} width='12px' alt='' />\n          <input type='text' name='username' id='username' placeholder='Enter your username' required/>\n        </div>\n\n        <div>\n          <img src={apple} width='12px' alt='' />\n          <input type='email' name='email' id='email' placeholder='Enter your email' required/>\n        </div>\n        <div>\n          <img src={lock} width='12px' alt='' />\n          <input type='password' name='password' id='password' placeholder='Enter your password' required />\n        </div>\n        <div>\n          <img src={phone} width='12px' alt='' />\n          <input type='text' name='contact' id='contact' placeholder='Enter your phone number' required/>\n        </div>\n        <button type='submit'>Register</button>\n      </form>\n    </div>\n  );\n}\n","/home/hawkins/cinemate/client/src/components/Movie.jsx",["88","89","90"],[],"import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport '../static/movie-info.css';\n\nexport default function Movie () {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get('id');\n  const [movie, setMovie] = useState([]);\n  const fetchMovie = async (id) => {\n    try {\n\t    const response = await fetch(`http://127.0.0.1:5000/api/movies/${id}`);\n\t    const data = await response.json();\n\t    setMovie(data);\n    } catch (err) {\n\t    console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchMovie(id);\n  }, [id]);\n  return (\n    <>\n      <div className='movie-info'>\n        <div\n          className='movie' id={movie.id} style={{\n\t\t      backgroundImage: `url(${movie.poster_url})`\n\t      }}\n        >\n          <img src={movie.poster_url} alt={movie.title} />\n          <div className='description'>\n            <h1>{movie.title}</h1>\n\t    <p><strong style={{color: 'black'}}>Streaming:&nbsp;</strong>{movie.release_date}</p>\n            <p><strong style={{ color: 'black'}}>Cinema:</strong>&nbsp;Cinemate&nbsp;Cineplex</p>\n            <button onClick={() => {\n\t\t\t   document.querySelector('.modal').style.transform = 'scale(1)';\n\t\t\t   document.querySelector('iframe').style.display = 'block';\n\t\t   }}\n            >Play Trailer\n            </button>\n            <p>{movie.overview}</p>\n\t    <Link to='/seatmap' onScrollTop={true}><button style={{\n\t\t\tbackgroundColor: '#22254b',\n\t\t\tmarginTop: '15px',\n\t\t\tborderRadius: '5px',\n\t\t\tpadding: '8px',\n\t\t\twidth: '4rem'\n\t\t}} onClick={() => {localStorage.setItem('movie', movie.id)}}>Book</button></Link>\n          </div>\n          <div className='movie-overlay' />\n        </div>\n      </div>\n      <div className='modal'>\n        <div className='modal-close'><i\n          class='fas fa-times close-icon' onClick={() => {\n\t      const modal = document.querySelector('.modal');\n\t      const iframe = modal.querySelector('iframe');\n\n\t      // Pause the YouTube video\n\t      const player = iframe.contentWindow;\n\t      player.postMessage('{\"event\":\"command\",\"func\":\"' + 'pauseVideo' + '\",\"args\":\"\"}', '*');\n\n\t      modal.style.transform = 'scale(0)';\n\t      iframe.style.display = 'none';\n\t    }}\n         />\n        </div>\n        <iframe width='300' height='200' src={movie.trailer_url} frameBorder='0' allowFullScreen />\n      </div>\n    </>\n  );\n}\n","/home/hawkins/cinemate/client/src/components/SeatMap.jsx",[],[],"/home/hawkins/cinemate/client/src/components/Movies.jsx",["91"],[],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../static/movies.css'\nimport Movie from './Movie.jsx'\n\nexport default function Movies() {\n    const [movies, setMovies] = useState([]);\n  \n    const fetchMovies = async () => {\n      const response = await fetch('http://127.0.0.1:5000/api/movies')\n      const data = await response.json()\n        setMovies(data);\n    }\n    useEffect(() => {\n        fetchMovies()\n      }\n    , []);\n  \n    return (\n      <>\n        <header>\n\t    <nav>\n          <ul>\n            <li><Link to='/'><i className=\"fas fa-chevron-left back-icon\" /></Link></li>\n          </ul>\n        </nav>\n        </header>\n        <div className=\"movies-container\">\n          {movies.map((movie) => (\n            <div className=\"movies\" id={movie.id}>\n              <img src={movie.poster_url} alt={movie.title} />\n              <Link to={'/movies/movie?id='+ movie.id}>{movie.title}</Link>\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n","/home/hawkins/cinemate/client/src/components/Dashboard.jsx",[],[],"/home/hawkins/cinemate/client/src/components/About.jsx",[],[],"/home/hawkins/cinemate/client/src/components/Landing.jsx",[],[],"/home/hawkins/cinemate/client/src/components/Ticket.jsx",["92"],[],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport QRCode from 'qrcode.react';\nimport '../static/ticket.css';\nimport logo from '../logo.png';\nimport Footer from './Footer';\n\nexport default function Ticket () {\n  const [ticket, setTicket] = useState({});\n  const [movie, setMovie] = useState({});\n  const [date, setDate] = useState('');\n  const fetchMovie = (id) => {\n  \treturn fetch(`http://127.0.0.1:5000/api/movies/${id}`)\n    \t\t.then(response => response.json())\n    \t\t.catch(err => console.error(err));\n  };\n  const getData = (ticket_id) => {\n    fetch(`http://127.0.0.1:5000/api/tickets/${ticket_id}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    }).then(response => response.json()).then(data => {\n\t    setTicket(data);\n\t    setDate(new Date(data.created_at.slice(0, -3) + 'Z').toISOString().split('T')[0]);\n    });\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const id = localStorage.getItem('ticket');\n      const movie_id = localStorage.getItem('movie');\n      setMovie(await fetchMovie(movie_id));\n      getData(id);\n    };\n    fetchData();\n  }, []);\n  return (\n    <>\n      <header>\n        <nav>\n          <ul>\n            <li><Link to='/dashboard'><i className='fas fa-chevron-left back-icon' /></Link></li>\n          </ul>\n        </nav>\n      </header>\n      <div className='ticket'>\n        <div className='ticket-header'>\n          <img src={logo} />\n          <p style={{ textTransform: 'uppercase' }}><strong>date generated: </strong>{date}</p>\n        </div>\n        <div className='ticket-info'>\n          <div className='details'>\n            <div className='distributions'>\n              <span>Transcation ID:</span>\n              <p>{ticket.booking_id}</p>\n            </div>\n            <div className='distributions'>\n              <span>Movie:</span>\n              <p>{ticket.movie}</p>\n            </div>\n            <div className='distributions'>\n              <span>Cinema:</span>\n              <p>{ticket.cinema}</p>\n            </div>\n            <div className='distributions'>\n              <span>Streaming:</span>\n              <p>{movie.release_date}</p>\n            </div>\n            <div className='distributions'>\n              <span>Price:</span>\n              <p>{ticket.price}</p>\n            </div>\n            <div className='distributions'>\n              <span>Seat Number:</span>\n              <p>{ticket.seat_number}</p>\n            </div>\n          </div>\n          <div className='qrcode'>\n            <QRCode value={JSON.stringify(ticket)} size={128} />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","/home/hawkins/cinemate/client/src/components/PayPalButton.jsx",[],[],"/home/hawkins/cinemate/client/src/components/ticketCreation.js",[],[],"/home/hawkins/cinemate/client/src/components/Footer.jsx",[],[],{"ruleId":"93","severity":1,"message":"94","line":4,"column":9,"nodeType":"95","messageId":"96","endLine":4,"endColumn":15},{"ruleId":"93","severity":1,"message":"97","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":13},{"ruleId":"93","severity":1,"message":"98","line":6,"column":9,"nodeType":"95","messageId":"96","endLine":6,"endColumn":15},{"ruleId":"93","severity":1,"message":"99","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":42,"column":6,"nodeType":"102","endLine":42,"endColumn":12,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"101","line":36,"column":6,"nodeType":"102","endLine":36,"endColumn":12,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":61,"column":57,"nodeType":"107","messageId":"108","endLine":61,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":61,"column":72,"nodeType":"107","messageId":"108","endLine":61,"endColumn":73},{"ruleId":"109","severity":1,"message":"110","line":68,"column":9,"nodeType":"111","endLine":68,"endColumn":100},{"ruleId":"93","severity":1,"message":"112","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":48,"column":11,"nodeType":"111","endLine":48,"endColumn":29},"no-unused-vars","'github' is defined but never used.","Identifier","unusedVar","'apple' is defined but never used.","'social' is defined but never used.","'phone' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postData'. Either include it or remove the dependency array.","ArrayExpression",["115"],["116"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Movie' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},"Update the dependencies array to be: [data, postData]",{"range":"120","text":"121"},{"range":"122","text":"121"},[1237,1243],"[data, postData]",[1194,1200]]